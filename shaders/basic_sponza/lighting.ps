#version 430 core

layout(binding=0) uniform sampler2D texture0; //normal tex
layout(binding=1) uniform sampler2D texture1; //depth tex

uniform mat4 inv_normal_mat;

uniform vec3 light_dir; //view space directional light direction

in vec4 vs_pos;
in vec2 tex_coord;

layout(location=0) out vec4 color;


void main()
{
  float depth = texture(texture1, tex_coord).x;

  //background coloring
  vec4 sky_col = vec4(0.5, 0.5, 0.8, 1);

  if(depth > 0.9999)
  {
    color = sky_col;
    return;
  }

  //view space lambert lighting
  vec3 n = texture(texture0, tex_coord).xyz * 2 - 1;
  vec3 l = light_dir;

  float n_dot_l = max( dot( n, l ), 0 );

  color = vec4( n_dot_l );

  //debug
  //hemisphere ambient term for visualization
  vec3 sky_dir = vec3( 0, 1, 0 );
  vec4 ground_col = vec4( vec3( 0.25 ), 1 );
  float hemi_intensity = 0.7;

  vec3 ws_n = (inv_normal_mat * vec4( n, 0 )).xyz;

  float vec_hemi = dot( n, sky_dir ) * 0.5 + 0.5;
  vec4 hemi_final = hemi_intensity * mix( ground_col, sky_col, vec_hemi );

  color += hemi_final;

  //debug
  //color = vec4( ws_n, 1 );
  //color = vec4( 1 );
}
